{"version":3,"sources":["reportWebVitals.js","axios.js","requests.js","Banner.js","Navbar.js","Row.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","instance","axios","create","baseURL","API_KEY","requests","fetchTrending","fetchNetflixOrignals","fetchTopRated","fetchActionMovies","fetchComedynMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","useState","movie","setMovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","console","log","className","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","substr","Navbar","show","handleShow","window","addEventListener","scrollY","removeEventListener","src","alt","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","map","onClick","movieTrailer","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","poster_path","id","videoId","opts","height","width","playerVars","autoplay","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e8260952.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from 'axios';\r\n\r\n// base url to make requests to the movie database \r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\n// instnace.get('foo-bar');\r\n// https://api.themoviedb.org/3/foo-bar\r\n\r\nexport default instance;","const API_KEY = \"7aa0a7679b11104a6b7274a8d4f414a5\";\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOrignals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedynMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\n\r\n\r\nexport default requests;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOrignals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  console.log(movie);\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition: \"center center\",\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n        <div className=\"bannner__buttons\">\r\n          <button className=\"banner__button\">Play </button>\r\n          <button className=\"banner__button\">My List </button>\r\n        </div>\r\n        <br />\r\n        <h1 className=\"bannner__description\">\r\n          {truncate(movie?.overview, 150)}\r\n        </h1>\r\n      </div>\r\n\r\n      <div className=\"banner--fadeBottom\"></div>\r\n      {/* background image  */}\r\n      {/* title  */}\r\n      {/* div > 2 buttons  */}\r\n      {/* description */}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar() {\r\n  const [show, handleShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else handleShow(false);\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className={`nav ${show && \"nav__black\"}`}>\r\n      <img\r\n        className=\"nav__logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1920px-Netflix_2015_logo.svg.png\"\r\n        alt=\" Netflix Logo \"\r\n      />\r\n      <img\r\n        className=\"nav__avatar\"\r\n        src=\"https://cdn.pixabay.com/photo/2017/07/18/23/23/user-2517433_960_720.png\"\r\n        alt=\" avatar Logo \"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n  // a snippet of codes which is based on a specific condition /variables\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      console.log(request);\r\n      return request;\r\n    }\r\n    fetchData();\r\n\r\n    //if [],run once  when the row is laods and dont run again\r\n  }, [fetchUrl]);\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.name || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n            src={`${base_url}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import React from \"react\";\nimport Banner from \"./Banner\";\nimport Navbar from \"./Navbar\";\nimport Row from \"./Row\";\nimport \"./App.css\";\nimport requests from \"./requests\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* navbar  */}\n      {/* banner */}\n\n      <Navbar />\n      <Banner />\n      <Row\n        title=\"NETFLIX ORIGINALS\"\n        fetchUrl={requests.fetchNetflixOrignals}\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedynMovies} />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"Documentries\" fetchUrl={requests.fetchDocumentaries} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}